v2.0

He visto que el método de Barnes-hut exige crear cuadrantes para todos los cuerpos. No para de crear cuadrantes por que estén muy cerca unos de otros. El considerar si existe un conjunto de cuerpos muy cercanos entre sí es para la hora de calcular las interacciones de fuerzas.

Tal y como tengo estructurado el BHNode, podríamos generar ya un árbol introduciéndole cuerpos. Faltaría calcularlos los centros de masa y las masas totales. 



---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------
v1.0

ESTO LO HAGO PARA INTENTAR EVITAR CREAR UNA CLASE QUE SEA EL ÁRBOL DE NODOS. NO OBSTANTE, PODEMOS INTENTAR CREAR DICHA CLASE. YO SIMPLEMENTE INTENTO HACERLO MÁS SENCILLO AUNQUE QUIZÁ CREAR LA CLASE ÁRBOL NO SEA MUY COMPLCIADO.

Tendremos que crear un programa que lo que haga sea recorrer una lista de cuerpos de forma que coja uno a uno y le diga a un nodo raíz de Cuadrantes que lo introduzca. El Nodo cuadrante debe reconocer que ese cuerpo está dentro del cuadrante, y si es así, decidir en cuál de sus cuatro hijos entra. Se pueden dar 3 situaciones a la hora de introducir un cuerpo en un cuadrante

(1) El cuadrante estaba vacío. Es la mejor situación pues tan solo hay que decirle a la lista de cuerpos que contiene el cuadrante que añada este cuerpo.

(2) El cuadrante tenía un cuerpo. Como ya tiene un cuerpo, hay que expandir el cuadrante. Una vez generados los 4 hijos, ver a qué cuadrantes deben ir tanto el cuerpo que ya contenía como el que se está intentando introducir. Además de quitarlo de su lista de cuerpos contenidos, pero no descontarle la cantidad de cuerpos dentro del cuadrante.

(3) El cuadrante ya tiene más de un cuerpo. Por lo tanto, ya está expandido. El nodo decidirá a qué cuadrante debería ir y se lo pasará a ese nodo hijo.

Esta situación se puede dar en los nodos hijos que el padre considere que deben contener el cuerpo en cuestión. Pero eso ya no es problema del padre, el hijo recursivamente llegará a tener esas tres situaciones entre sus hijos.

La lista de cuerpos solo debe contener referencias en los nodos que son hoja. Es decir, en los cuadrantes que ya no se volvieron a expandir. No quiero referencias a esos cuerpos en nodos intermedios pues si queremos borrar algún cuadrante o sucede algo, habrían referencias a esos cuerpos repartidos por toda la rama. Un lío.

Luego, deberíamos tener una lista que va evolucionando con el árbol en la que solo están contenidos los nodos hoja (que tienen cuerpos en su lista de cuerpos, no se han expandido). Cuando todos los cuerpos se hayan introducido, tendremos una lista de hojas que utilizaremos para calcular las masas y centros de masa en los cuadrantes. Esto se calcula desde las hojas hacia arriba. El recorrido debería hacer lo siguiente:

* Coger el primer nodo hoja que haya en la lista
* Ordenarle que actualice el valor de masa y centro de masa de su padre con sus valores
* Guardar a su padre al final de la lista
* Quitarlo de la lista

De esta forma, cuando se hayan calculado con todos los nodos de la frontera (los nodos hoja del final), continuaremos calculando con sus padres y así hasta volver a la raíz.

Por esta razón, necesitamos las siguientes estructuras:

- Un vector de punteros a Cuerpos que contenga todos los cuerpos que vamos a tratar y se utilizará para ir introduciéndolos en el cuadrante y generar el árbol.
- Una estructura que nos permita almacenar punteros a nodos, sin que se repitan las referencias al mismo nodo, y que además nos permita recorrerla. Podríamos intentar adapatar de alguna forma TListaPoro a una versión de lista enlazada sencilla, pues no necesitamos muchas de las cosas que dicha estructura tiene. 

Ahora bien, si se os ocurre una idea mejor para conseguir que al final de introducir todos los cuerpos podamos empezar a calcular centros de masa, no os la guardéis. Hay que intentar ir a lo simple y sencillo, tampoco tenemos tiempo para complicarlo demasiado.

El método de Barnes-hut no acaba ahí y realmente lo que hace luego es calcular las fuerzas que se ejercen entre sí los nodos pero sin ir nodo a nodo. Si cojemos un nodo A y queremos ver cómo le afectan otros cuerpos haremos lo siguiente:

* Desde la raíz se exploran los nodos
* Cada nodo X se considera su ratio=ancho_cuadrante_nodo_X / distancia_nodo_A_centro_masas_nodo_X. Si este ratio es menor que un valor de theta que nosotros digamos, no exploraremos los hijos del nodo X y los consideraremos todos una masa con su coordenada que será el nodo X. Si ese ratio, por otro lado, es mayor que el valor de theta que digamos, exploraremos sus hijos. Si theta=0 no haremos nada pues estaremos yendo a O(N^2). Ideal 0.5<theta<1.
* Cogeremos su primer hijo y calcularemos el mismo ratio. Así con todos sus hermanos.

Esta parte es la que mayor tiempo de cálculo se lleva, pero es que además conlleva que nosotros digamos qué cuerpo queremos ver interactuar con los demás por lo que las referencias de los cuerpos no deberíamos perderlas nunca.